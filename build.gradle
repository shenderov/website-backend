buildscript {
	ext {
		springBootVersion = '2.3.7.RELEASE'
	}
	repositories {
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jfrog.buildinfo:build-info-extractor-gradle:latest.release")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'com.jfrog.artifactory'

group = "me.shenderov"
version = "1.0.x-SNAPSHOT${geBuildNumber()}"
sourceCompatibility = 1.8

repositories {
	jcenter()
}

configurations {
	providedRuntime
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-security:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-validation:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-cache:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-mail:${springBootVersion}")
	compile("org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}")
	compile('org.apache.httpcomponents:httpclient:4.5.12')
	compile('org.apache.logging.log4j:log4j-api:2.11.1')
	compile('org.apache.logging.log4j:log4j-core:2.11.1')

	testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
	testCompile("com.google.code.gson:gson:2.8.6")
	testCompile("io.rest-assured:rest-assured:4.2.0")
	testCompile("io.rest-assured:json-path:4.2.0")
	testCompile("io.rest-assured:xml-path:4.2.0")
	testCompile("org.testng:testng:6.14.3")
}

artifactory {
	publish {
		publishBuildInfo = true
		publishArtifacts = true
		defaults {
			publishConfigs('archives')
		}
	}
}

artifactoryPublish {
	dependsOn bootWar
}

test {
	outputs.upToDateWhen { false }
	useTestNG() {
		useDefaultListeners = true
		suites "src/test/resources/test-classes.xml"
	}
	testLogging {
		events "PASSED", "FAILED", "SKIPPED"
	}
	reports.html.enabled = true
}

static def geBuildNumber() {
	return System.env.BUILD_NUMBER == null ? "" : "-$System.env.BUILD_NUMBER"
}